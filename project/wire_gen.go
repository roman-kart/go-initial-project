// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package project

import (
	"github.com/roman-kart/go-initial-project/project/config"
	"github.com/roman-kart/go-initial-project/project/managers"
	"github.com/roman-kart/go-initial-project/project/utils"
)

// Injectors from wire.go:

func InitializeApplication(configFolder string) (*Application, func(), error) {
	configConfig, err := config.NewConfig(configFolder)
	if err != nil {
		return nil, nil, err
	}
	logger, cleanup, err := utils.NewLogger(configConfig)
	if err != nil {
		return nil, nil, err
	}
	clickHouse := utils.NewClickHouse(configConfig, logger)
	postgresql := utils.NewPostgresql(configConfig, logger)
	rabbitMQ := utils.NewRabbitMQ(configConfig, logger)
	s3 := utils.NewS3(configConfig, logger, postgresql)
	telegramBot := utils.NewTelegram(configConfig, logger, rabbitMQ)
	statManager := managers.NewStatManager(logger, clickHouse, configConfig)
	userAccountManager := managers.NewUserManager(logger, postgresql, configConfig)
	telegramBotManager := managers.NewTelegramBotManager(configConfig, logger, statManager, userAccountManager, telegramBot)
	application := NewApplication(configConfig, clickHouse, logger, postgresql, rabbitMQ, s3, telegramBot, statManager, telegramBotManager, userAccountManager)
	return application, func() {
		cleanup()
	}, nil
}
